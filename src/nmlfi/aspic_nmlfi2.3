.TH libnmlfi 3 "March 23, 2023" "libaspic" "Module convention" 

.SH NAME
.I nmlfi2
- the non-minimal large field inflation module at increasing field
  values for 'p < p-' and 'xi > xizero(p)'

.SH SYNOPSIS
.TP 20
Physical potential (only known as a parametric function):

V(hbar) = M^4 * hbar^p/(1 + hbar^2)^2

with

.RS
phi/Mg = sqrt(6+1/xi) ln{ sqrt[1+(1+6xi)hbar^2] + sqrt[(1+6xi)hbar^3]} + sqrt(6) ln{ sqrt(1+hbar^2)/[sqrt[1+(1+6xi)hbar^2] + sqrt(6xi hbar^2)] }
.RE

.TP
Routine units
.I real(kp)
::
.B x
= phi/Mg
.TP
Parameters
.I real(kp)
::
.B xi
.RS
.I real(kp)
::
.B p
.RE

.SH DESCRIPTION
The
.I nmlfi2
module is used for Non-Minimal Large Field Inflation, at increasing
field values. Inflation ends at a field value 'xend', returned by the
function
.IP
.BR nmlfi2_x_endinf (xi,p)
.P
This regime proceeds on the right of the potential maximum 'xVmax',
and this one must exist, i.e. 'p < 4'. However, for the graceful
ending to be possible, the parameters 'p' and 'xi' have to satisfy
the additional constraints:
.IP
.BR p < p- ~ 0.54
.RE
.RS
.BR xi > xizero(p)
.RE
.P
This model dramatically suffers from being fine-tuned to the top of
the potential and violates slow-roll. It has therefore only a
theoretical interest. Many functions are common with
.I nmlfi1
and
.I nmlfi3
in the module named
.BR nmlficommon .
The value of 'xvMax' is returned by
.BR nmlfi_x_potmax (xi,p)
which is a wrapper over the function
.BR nmlfi_hbar_potmax (xi,p).
This module also contains
.BR nmlfi_xizero (p),
which returns the above-mentionned 'xizero(p)' limiting values
of 'xi'. These functions are imported by directives of this form
.IP
.B use nmlficommon, only : nmlfi_hbar_potmax, nmlfi_xizero
.P
The
.B nmlficommon
module also contains all the functions allowing conversion between
parametric field values 'hbar' and canonically normalized
ones 'phi/Mg'. For instance, it has the
.I real(kp)
functions
.IP
.BR nmlfi_x(hbar,xi)
.RS
.BR nmlfi_hbar(x,xi)
.RE
.P
which return 'x' given 'hbar' and 'xi', or, 'hbar' given 'x' and 'xi'.

.P
Finally,  other numerically convenient functions can be found in
"nmlficommon.f90" in a coding convention very similar to what is done
for Dual Inflation. Please also check the man pages of
.BR aspic_di
for more detailed informations.


.SH AUTHORS
Jerome Martin, Christophe Ringeval, Vincent Vennin

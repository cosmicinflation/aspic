.TH libsaiii 3 "July 04, 2019" "libaspic" "Module convention" 

.SH NAME
.I saiii2
- the string axion II inflation module at increasing field values near
  a maximum of the potential

.SH SYNOPSIS
.TP
Physical potential
V(phi) = M^4 [ 1 - cos(x) + alpha x sin(x) + (1/2) alpha beta x^2 ]
.TP
Routine units
.I real(kp)
::
.B x
= phi/mu
.TP
Parameters
.I real(kp)
::
.B alpha
.RS
.I real(kp)
::
.B beta
.RS
.RE
.I real(kp)
::
.B mu/Mp
.RE

.SH DESCRIPTION
The
.I saiii2
module is used for the string axion II inflation when inflation occurs
at increasing field values, namely in the region for which 'x >
xVmax', the field value at which the potential is maximal. In this
regime, inflation naturally ends at a field value 'xend > xVmax' returned by
the
.I real(kp)
function
.IP
.BR saiii2_x_endinf (alpha,beta,mu).
.RS
.RE

The potential does not exhibit a local maximum for all values
of 'alpha' and 'beta'. And even when it does, not all parameter values
allow inflation to gracefully ends. The model actually exists only
within a thin region of the parameter space. In particular, a
necessary (but not sufficient) condition for the parameter 'beta' is
to verify
.IP
beta3=-0.26 < beta < beta2=0.43
.P
In addition, the value of the parameter 'alpha' should be larger (if
positive), or smaller (if negative) than the
.I real(kp)
function
.IP
.BR saiii_alpha_potneg (beta).
.P
The parameters 'beta2', 'beta3', as well as the above function can be
imported with
.IP
.B use saiiicommon, only : beta2, beta3, saiii_alpha_potneg
.P
We also provide a convenient
.I logical
function
.IP
.BR saiii2_check_params (alpha,beta,mu)
.P
which can be used to check if all conditions required for
.I saiii2
to exist are fulfilled. This function returns '.true.' when that is
the case and '.false.' otherwise. Moreover, finite numerical accuracy
prevents us to explore inflationary domains infinitely close to
the potential maximum (and for which the predictions are simply
de-Sitter). This usually happens for small values of the vev 'mu'. The
.I real(kp)
function
.IP
.BR saiii2_numacc_mumin (efold,alpha,beta)
.P
can be used for this purpose. It returns the minimal value of 'mu'
to compute the number of 'efold' of inflation without encountering
finite numerical accuracy issues. Similarly, the
.I real(kp)
function
.IP
.BR saiii2_numacc_xinimin (alpha,beta,mu)
.P
returns the minimal field value, close to the potential's maximum,
which is explorable with the current finite numerical accuracy.
Finally, the
.I real(kp)
function
.IP
.BR saiii1_numacc_efoldmax (alpha,beta,mu)
.P
returns the maximal number of 'efolds' computable at the current
numerical accuracy given 'alpha','beta' and 'mu'.


This model shares a
few peculiar functions with
.I saiii2
and
.I saiii3
in a module named
.BR saiicommon .
For instance, the value of 'xVmax', when it exists, is returned by the
.I real(kp)
function
.BR saiii_x_potmax (alpha).
.P
This function is imported by
.IP
.B use saiiicommon, only : saiii_x_potmax
.P
Many other functions to determine the location and existence of the
potential's extrema, and zeros, are available in this module, please
check the source code of
.B saiiicommon
for more details.
.SH AUTHORS
Jerome Martin, Christophe Ringeval, Vincent Vennin
